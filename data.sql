CREATE SCHEMA IF NOT EXISTS "public";

CREATE  TABLE "public".permission ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	name                 varchar(100)  NOT NULL  ,
	created_at           timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL  ,
	CONSTRAINT pk_permission PRIMARY KEY ( id ),
	CONSTRAINT permission_name UNIQUE ( name ) 
 );

CREATE  TABLE "public"."role" ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	name                 varchar(100)  NOT NULL  ,
	created_at           timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL  ,
	CONSTRAINT pk_role PRIMARY KEY ( id ),
	CONSTRAINT role_name UNIQUE ( name ) 
 );

CREATE  TABLE "public".role_permission ( 
	id_role              integer  NOT NULL  ,
	id_permission        integer  NOT NULL  
 );

CREATE  TABLE "public".user_account ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	name                 varchar(100)  NOT NULL  ,
	email                varchar(100)  NOT NULL  ,
	"password"           varchar(100)  NOT NULL  ,
	created_at           timestamptz DEFAULT CURRENT_TIMESTAMP   ,
	CONSTRAINT pk_user_account PRIMARY KEY ( id ),
	CONSTRAINT unq_user_email UNIQUE ( email ) 
 );

CREATE  TABLE "public".user_profile ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	user_id              integer  NOT NULL  ,
	age                  integer    ,
	phone                integer    ,
	district             varchar(100)    ,
	city                 varchar(100)    ,
	country              varchar(100)    ,
	created_at           timestamptz DEFAULT CURRENT_TIMESTAMP   ,
	CONSTRAINT pk_user_profile PRIMARY KEY ( id )
 );

CREATE  TABLE "public".user_role ( 
	id_user              integer  NOT NULL  ,
	id_role              integer  NOT NULL  
 );

ALTER TABLE "public".role_permission ADD CONSTRAINT fk_role_permission_permission FOREIGN KEY ( id_permission ) REFERENCES "public".permission( id ) ON DELETE CASCADE;

ALTER TABLE "public".role_permission ADD CONSTRAINT fk_role_permission_role FOREIGN KEY ( id_role ) REFERENCES "public"."role"( id ) ON DELETE CASCADE;

ALTER TABLE "public".user_profile ADD CONSTRAINT fk_user_profile_user_account FOREIGN KEY ( user_id ) REFERENCES "public".user_account( id ) ON DELETE CASCADE;

ALTER TABLE "public".user_role ADD CONSTRAINT fk_user_role_role FOREIGN KEY ( id_role ) REFERENCES "public"."role"( id ) ON DELETE CASCADE;

ALTER TABLE "public".user_role ADD CONSTRAINT fk_user_role_user_account FOREIGN KEY ( id_user ) REFERENCES "public".user_account( id ) ON DELETE CASCADE;

INSERT INTO "public".permission( id, name, created_at ) VALUES ( 1, 'handle permission', '2025-08-08 05:02:38 PM');
INSERT INTO "public".permission( id, name, created_at ) VALUES ( 2, 'handle role', '2025-08-08 05:02:48 PM');
INSERT INTO "public".permission( id, name, created_at ) VALUES ( 4, '', '2025-08-08 05:37:08 PM');
INSERT INTO "public"."role"( id, name, created_at ) VALUES ( 1, 'admin', '2025-08-08 05:03:16 PM');
INSERT INTO "public".role_permission( id_role, id_permission ) VALUES ( 1, 1);
INSERT INTO "public".role_permission( id_role, id_permission ) VALUES ( 1, 2);
INSERT INTO "public".user_account( id, name, email, "password", created_at ) VALUES ( 1, 'kalveir', 'kalveir@gmail.com', '$2a$10$7CfzVVG0RoADtUxfWRC9COjj01d/fk2vlZTz.TsuFpw3HoOZlwVeG', '2025-08-08 05:06:52 PM');
INSERT INTO "public".user_account( id, name, email, "password", created_at ) VALUES ( 2, 'aviero', 'aviero@gmail.com', '$2a$10$miCMaaFL3XzqiFo06dV6oeO9z5p5LWvrN0qkxCaqOVA9Ma3Ymns6K', '2025-08-08 05:07:19 PM');
INSERT INTO "public".user_profile( id, user_id, age, phone, district, city, country, created_at ) VALUES ( 2, 2, null, null, null, null, null, '2025-08-08 05:07:19 PM');
INSERT INTO "public".user_profile( id, user_id, age, phone, district, city, country, created_at ) VALUES ( 1, 1, null, null, null, null, null, '2025-08-08 05:06:52 PM');
INSERT INTO "public".user_role( id_user, id_role ) VALUES ( 1, 1);